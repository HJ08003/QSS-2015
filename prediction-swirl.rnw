\section{Swirl Review Questions}
  \subsection{Lesson 1}
  \begin{enumerate}             
    \item True or False: Loops can simplify our programming code when we want to repeatedly execute code chunks over and over again.
    \begin{enumerate}
      \item \rexpr{True}
      \item \rexpr{False}
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    'True'
    @
    \fi
    \item To iterate means to \_\_\_\_\_.
    \begin{enumerate}
      \item perform repeatedly
      \item perform once
      \item skip over
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    perform repeatedly
    @
    \fi
    \item Given that \rexpr{n <- 10}, how many times will the loop \rexpr{for (i in 1:n)} iterate through?
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    10
    @
    \fi
    \item In the conditional expression \rexpr{if (Y) \{expression1\}}, \rexpr{expression1} will be executed if \rexpr{Y} is \_\_\_\_\_.
    \begin{enumerate}
      \item True
      \item False
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    'True'
    @
    \fi
    \item A conditional statement that is nested within a loop is executed \_\_\_\_\_ the loop.
    \begin{enumerate}
      \item inside
      \item outside
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    inside
    @
    \fi
    \item Create a vector called \rexpr{output} that is filled with \rexpr{NA}s and has the length \rexpr{n}. The object \rexpr{n} has been included in this lesson.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    output <- rep(NA, n)
    @
    \fi
    \item Use the \rexpr{\rfun{cat()}} function to put together a phrase and the object \rexpr{n}. The final output should read 'The object n has length 10'.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    cat("The object n has length", n)
    @
    \fi
    \item A vector called \rexpr{fruit} has been loaded for you. Call the vector to see what it looks like.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fruit
    @
    \fi
    \item Use a function to determine the different types of fruit (we want to see each fruit listed once).' 
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    unique(fruit)
    @
    \fi
    \item Here is a variant of the classic 'FizzBuzz' coding question. Write a for loop that executes the code 'cat('The following number i is divisible by 3', i, '\textbackslash{}n')' for numbers from 1 to 50 (inclusive) only for the numbers divisible by 3. Include brackets for the conditional.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    for(i in 1:50){if (i %% 3 == 0) { cat("The following number i is divisible by 3", i, "\n") }}
    @
    \fi
    \item Continuing from the previous FizzBuzz code you wrote, if the number is divisible by 5 (but not by 3), execute the code 'cat('The following number i is divisible by 5', i, '\textbackslash{}n')'.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    for(i in 1:50){if (i %% 3 == 0) { cat("The following number i is divisible by 3", i, "\n") } else if (i %% 5 == 0) { cat("The following number i is divisible by 5", i, "\n")}}
    @
    \fi
  \end{enumerate}
  \subsection{Lesson 2}
  \begin{enumerate}
    \item True or False: A positive correlation means that one variable is more likely to be above its mean when the other variable is also above its mean.
    \begin{enumerate}
      \item True
      \item False
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    'True'
    @
    \fi
    \item The intercept a in the model y = a + bx + e represents the average value of y when x is equal to \_\_\_\_\_.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    '0'
    @
    \fi
    \item We use the regression line to predict the value of the outcome variable y hat, otherwise known as \_\_\_\_\_
    \begin{enumerate}
      \item predicted value
      \item fitted value
      \item both of these
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    both of these
    @
    \fi
    \item An R\textasciicircum{}2 close to 1 suggests the model fits \_\_\_\_\_\_\_\_\_\_\_
    \begin{enumerate}
      \item well
      \item not well
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    well
    @
    \fi
    \item The difference between the observed outcome and its predicted value is called a \_\_\_\_\_\_\_.
    \begin{enumerate}
      \item residual
      \item prediction error
      \item either of these
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    either of these
    @
    \fi
    \item In the model y = 5 + 2x, what is the intercept?
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    '5'
    @
    \fi
    \item We have included two vectors x and y. Regress y on x and assign it to an object called \rexpr{fit}.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fit <- lm(y ~ x)
    @
    \fi
    \item Type in the \rexpr{fit} object to see what it looks like.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fit
    @
    \fi
    \item How do you see the estimated coefficients from the \rexpr{fit} object?
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    coef(fit)
    @
    \fi
    \item What are the predicted values?
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fitted(fit)
    @
    \fi
  \end{enumerate}
  \subsection{Lesson 3}
  \begin{enumerate}
    \item How can regression models be used to draw causal inference?
    \begin{enumerate}
      \item by predicting counterfactual outcomes
      \item by randomizing outcomes
      \item by fitting a line
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    by predicting counterfactual outcomes
    @
    \fi
    \item Association \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ imply causation.
    \begin{enumerate}
      \item will always
      \item will never
      \item does not necessarily
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    does not necessarily
    @
    \fi
    \item The main reason it is difficult to draw causal inference in observational studies is due to \_\_\_\_\_\_\_\_\_\_.
    \begin{enumerate}
      \item confounders
      \item associations
      \item errors
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    confounders
    @
    \fi
    \item A regression discontinuity design attempts to make causal inferences by analyzing observations lying \_\_\_\_\_\_\_\_\_\_ a given threshold.
    \begin{enumerate}
      \item closely across
      \item far away from
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    closely across
    @
    \fi
    \item Even if the average treatment effect is positive, the same treatment may not affect everyone in the positive direction. This is an example of \_\_\_\_\_\_\_\_\_.
    \begin{enumerate}
      \item heterogenous treatment effects
      \item homogenous treatment effects
      \item both of these
    \end{enumerate}
    \if1\solutions
    \noindent{\bf Solution:}
    <<eval=FALSE>>=
    heterogenous treatment effects
    @
    \fi
    \item A dataset called \rexpr{df} has been pre-loaded for you. It contains three variables x1, x2 and y. Regress y on x1 and x2.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    lm(y ~ x1 + x2, data = df)
    @
    \fi
    \item Regress y on x1 and x2 again, this time omitting the intercept and saving it to the object \rexpr{fit}.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fit <- lm(y ~ -1 + x1 + x2, data = df)
    @
    \fi
    \item Use an \ R{} function to call the coefficients of \rexpr{fit}.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    coef(fit)
    @
    \fi
    \item Calculate the difference in coefficients between x2 and x1 from fit.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    coef(fit)["x2"] - coef(fit)["x1"]
    @
    \fi
    \item Run the regression again this time including x1 squared as regressor. You should also include an intercept and x1 and x2. Save it to an object called \rexpr{fit2}. Make sure to use the \rfun{I()} function when squaring the x1 term.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    fit2 <- lm(y ~ x1 + I(x1^2) + x2, data = df)
    @
    \fi
    \item Use a function to predict the fitted values of \rexpr{fit2}.
    \if1\solutions
    \newline\newline \noindent{\bf Solution:}
    <<eval=FALSE>>=
    predict(fit2)
    @
    \fi
  \end{enumerate}
